/*
 * Authentication API
 * The signup module has an action API, which is used for the following reasons. 1) To initiate the login page, if authentication is applicable for the  user, during action authorize  granting access to the system . 2) To validate the login, along with the password of the user 3) To cancel the request  when authentication process is cancelled .4) To support the actions login and logout mechanism
 *
 * OpenAPI spec version: 1.0.0
 * Contact: rubiyakadarbasha@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.api.assignment.models;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.api.assignment.models.TxnPayload;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * LoginPayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-28T18:07:05.498+05:30")
public class LoginPayload {
  @JsonProperty("username")
  private String username = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("txnData")
  private TxnPayload txnData = null;

  public LoginPayload username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Required for username validate.
   * @return username
  **/
  @ApiModelProperty(example = "Admin", value = "Required for username validate.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public LoginPayload password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Required for password to authenticate
   * @return password
  **/
  @ApiModelProperty(example = "Admin", value = "Required for password to authenticate")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public LoginPayload txnData(TxnPayload txnData) {
    this.txnData = txnData;
    return this;
  }

   /**
   * Get txnData
   * @return txnData
  **/
  @ApiModelProperty(value = "")
  public TxnPayload getTxnData() {
    return txnData;
  }

  public void setTxnData(TxnPayload txnData) {
    this.txnData = txnData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginPayload loginPayload = (LoginPayload) o;
    return Objects.equals(this.username, loginPayload.username) &&
        Objects.equals(this.password, loginPayload.password) &&
        Objects.equals(this.txnData, loginPayload.txnData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, txnData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginPayload {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    txnData: ").append(toIndentedString(txnData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

